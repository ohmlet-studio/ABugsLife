[gd_scene load_steps=14 format=3 uid="uid://lsovv6fjqklv"]

[ext_resource type="Shader" uid="uid://eyxyibbprdnv" path="res://Scene/PauseMenu.gdshader" id="1_kwk25"]
[ext_resource type="FontFile" uid="uid://cnvordvwxiv71" path="res://Assets/Fonts/OliveVTypewriter-RemingPort.otf" id="2_mccmf"]
[ext_resource type="PackedScene" uid="uid://cxrjhj4i620kx" path="res://Scene/volume_slider.tscn" id="3_l1n2m"]
[ext_resource type="FontFile" uid="uid://rhjyd1w7qf47" path="res://Assets/Fonts/punknova-regular.otf" id="4_157kv"]
[ext_resource type="StyleBox" uid="uid://b61i1wlhgxiau" path="res://Assets/Styles/MainMenuHovered.tres" id="5_olw3t"]

[sub_resource type="GDScript" id="GDScript_kwk25"]
script/source = "extends Control

func resume():
	hide()
	get_tree().paused = false
	$AnimationPlayer.play_backwards(\"Blur\")
	
func pause():
	show()
	get_tree().paused = true
	$AnimationPlayer.play(\"Blur\")

func testEsc():
	if Input.is_action_just_pressed(\"Escape\") and get_tree().paused == false:
		pause()
	elif Input.is_action_just_pressed(\"Escape\") and get_tree().paused == true:
		resume()

func _on_resume_pressed() -> void:
	resume()

func _on_quit_pressed() -> void:
	resume()
	get_tree().change_scene_to_file(\"res://Scene/Menus/MainMenu.tscn\")

func _process(delta):
	testEsc()
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_kwk25"]
shader = ExtResource("1_kwk25")
shader_parameter/lod = 0.0

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_4msbn"]
bg_color = Color(1, 0.943333, 0.66, 0.188235)
corner_radius_top_left = 60
corner_radius_top_right = 60
corner_radius_bottom_right = 60
corner_radius_bottom_left = 60
shadow_color = Color(0, 0, 0, 0.278431)
shadow_size = 8

[sub_resource type="InputEventKey" id="InputEventKey_d4yab"]
keycode = 4194309

[sub_resource type="Shortcut" id="Shortcut_3o1w7"]
events = [SubResource("InputEventKey_d4yab")]

[sub_resource type="Animation" id="Animation_kwk25"]
resource_name = "Blur"
length = 0.3
tracks/0/type = "bezier"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("ColorRect:material:shader_parameter/lod")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"handle_modes": PackedInt32Array(0, 0),
"points": PackedFloat32Array(0, -0.25, 0, 0.25, 0, 0.82, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(0, 0.3)
}
tracks/1/type = "bezier"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("MarginContainer:modulate:r")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"handle_modes": PackedInt32Array(0, 0),
"points": PackedFloat32Array(1, -0.15, 0, 0.15, 0, 1, -0.15, 0, 0.15, 0),
"times": PackedFloat32Array(0, 0.3)
}
tracks/2/type = "bezier"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("MarginContainer:modulate:g")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"handle_modes": PackedInt32Array(0, 0),
"points": PackedFloat32Array(1, -0.15, 0, 0.15, 0, 1, -0.15, 0, 0.15, 0),
"times": PackedFloat32Array(0, 0.3)
}
tracks/3/type = "bezier"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("MarginContainer:modulate:b")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"handle_modes": PackedInt32Array(0, 0),
"points": PackedFloat32Array(1, -0.15, 0, 0.15, 0, 1, -0.15, 0, 0.15, 0),
"times": PackedFloat32Array(0, 0.3)
}
tracks/4/type = "bezier"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("MarginContainer:modulate:a")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"handle_modes": PackedInt32Array(0, 0),
"points": PackedFloat32Array(0, -0.15, 0, 0.15, 0, 1, -0.15, 0, 0.15, 0),
"times": PackedFloat32Array(0, 0.3)
}

[sub_resource type="Animation" id="Animation_mccmf"]
length = 0.001
tracks/0/type = "bezier"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("ColorRect:material:shader_parameter/lod")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"handle_modes": PackedInt32Array(0),
"points": PackedFloat32Array(0, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(0)
}
tracks/1/type = "bezier"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("MarginContainer:modulate:r")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"handle_modes": PackedInt32Array(0),
"points": PackedFloat32Array(1, -0.15, 0, 0.15, 0),
"times": PackedFloat32Array(0)
}
tracks/2/type = "bezier"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("MarginContainer:modulate:g")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"handle_modes": PackedInt32Array(0),
"points": PackedFloat32Array(1, -0.15, 0, 0.15, 0),
"times": PackedFloat32Array(0)
}
tracks/3/type = "bezier"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("MarginContainer:modulate:b")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"handle_modes": PackedInt32Array(0),
"points": PackedFloat32Array(1, -0.15, 0, 0.15, 0),
"times": PackedFloat32Array(0)
}
tracks/4/type = "bezier"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("MarginContainer:modulate:a")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"handle_modes": PackedInt32Array(0),
"points": PackedFloat32Array(0, -0.15, 0, 0.15, 0),
"times": PackedFloat32Array(0)
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_l1n2m"]
_data = {
&"Blur": SubResource("Animation_kwk25"),
&"RESET": SubResource("Animation_mccmf")
}

[node name="PauseMenu" type="Control"]
process_mode = 3
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = SubResource("GDScript_kwk25")

[node name="ColorRect" type="ColorRect" parent="."]
material = SubResource("ShaderMaterial_kwk25")
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="MarginContainer" type="MarginContainer" parent="."]
modulate = Color(1, 1, 1, 0)
layout_mode = 1
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -148.5
offset_top = -87.5
offset_right = 148.5
offset_bottom = 87.5
grow_horizontal = 2
grow_vertical = 2

[node name="ColorRect" type="ColorRect" parent="MarginContainer"]
layout_mode = 2
color = Color(0.0784314, 0.0784314, 0.0784314, 0.772549)

[node name="VBoxContainer" type="VBoxContainer" parent="MarginContainer"]
layout_mode = 2

[node name="HBoxContainer" type="HBoxContainer" parent="MarginContainer/VBoxContainer"]
layout_mode = 2
size_flags_vertical = 3

[node name="Label" type="Label" parent="MarginContainer/VBoxContainer/HBoxContainer"]
layout_mode = 2
theme_override_fonts/font = ExtResource("2_mccmf")
text = "Volume:"

[node name="VolumeSlider" parent="MarginContainer/VBoxContainer/HBoxContainer" instance=ExtResource("3_l1n2m")]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 1

[node name="Resume" type="Button" parent="MarginContainer/VBoxContainer"]
layout_mode = 2
size_flags_horizontal = 4
size_flags_vertical = 6
theme_override_fonts/font = ExtResource("4_157kv")
theme_override_font_sizes/font_size = 32
theme_override_styles/hover = ExtResource("5_olw3t")
theme_override_styles/pressed = ExtResource("5_olw3t")
theme_override_styles/normal = SubResource("StyleBoxFlat_4msbn")
shortcut = SubResource("Shortcut_3o1w7")
text = "Resume"

[node name="Quit" type="Button" parent="MarginContainer/VBoxContainer"]
layout_mode = 2
size_flags_horizontal = 4
size_flags_vertical = 6
theme_override_fonts/font = ExtResource("4_157kv")
theme_override_font_sizes/font_size = 32
theme_override_styles/hover = ExtResource("5_olw3t")
theme_override_styles/pressed = ExtResource("5_olw3t")
theme_override_styles/normal = SubResource("StyleBoxFlat_4msbn")
shortcut = SubResource("Shortcut_3o1w7")
text = "Quit
"

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
&"": SubResource("AnimationLibrary_l1n2m")
}

[connection signal="pressed" from="MarginContainer/VBoxContainer/Resume" to="." method="_on_resume_pressed"]
[connection signal="pressed" from="MarginContainer/VBoxContainer/Quit" to="." method="_on_quit_pressed"]
